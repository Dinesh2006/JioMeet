<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="2" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-11-24T17:38:37 IST" name="Suite Midtrans" finished-at="2019-11-24T17:39:15 IST" duration-ms="37561">
    <groups>
    </groups>
    <test started-at="2019-11-24T17:38:37 IST" name="Validating Payment Flow" finished-at="2019-11-24T17:39:15 IST" duration-ms="37561">
      <class name="tests.MidtransPaymentFlowTest">
        <test-method is-config="true" signature="setupBeforeTest()[pri:0, instance:tests.MidtransPaymentFlowTest@49e53c76]" started-at="2019-11-24T17:38:37 IST" name="setupBeforeTest" finished-at="2019-11-24T17:38:37 IST" duration-ms="201" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupBeforeTest -->
        <test-method is-config="true" signature="setupBeforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.MidtransPaymentFlowTest@49e53c76]" started-at="2019-11-24T17:38:37 IST" name="setupBeforeMethod" finished-at="2019-11-24T17:38:43 IST" duration-ms="5993" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.MidtransPaymentFlowTest.successPaymentFlow() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupBeforeMethod -->
        <test-method signature="successPaymentFlow()[pri:0, instance:tests.MidtransPaymentFlowTest@49e53c76]" started-at="2019-11-24T17:38:43 IST" name="successPaymentFlow" finished-at="2019-11-24T17:39:02 IST" duration-ms="18591" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successPaymentFlow -->
        <test-method is-config="true" signature="setupAfterMethod()[pri:0, instance:tests.MidtransPaymentFlowTest@49e53c76]" started-at="2019-11-24T17:39:02 IST" name="setupAfterMethod" finished-at="2019-11-24T17:39:02 IST" duration-ms="122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupAfterMethod -->
        <test-method is-config="true" signature="setupBeforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.MidtransPaymentFlowTest@49e53c76]" started-at="2019-11-24T17:39:02 IST" name="setupBeforeMethod" finished-at="2019-11-24T17:39:07 IST" duration-ms="5256" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.MidtransPaymentFlowTest.failedPaymentFlow() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupBeforeMethod -->
        <test-method signature="failedPaymentFlow()[pri:0, instance:tests.MidtransPaymentFlowTest@49e53c76]" started-at="2019-11-24T17:39:07 IST" name="failedPaymentFlow" finished-at="2019-11-24T17:39:13 IST" duration-ms="5787" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failedPaymentFlow -->
        <test-method is-config="true" signature="setupAfterMethod()[pri:0, instance:tests.MidtransPaymentFlowTest@49e53c76]" started-at="2019-11-24T17:39:13 IST" name="setupAfterMethod" finished-at="2019-11-24T17:39:13 IST" duration-ms="129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupAfterMethod -->
        <test-method is-config="true" signature="setupAfterTest()[pri:0, instance:tests.MidtransPaymentFlowTest@49e53c76]" started-at="2019-11-24T17:39:13 IST" name="setupAfterTest" finished-at="2019-11-24T17:39:15 IST" duration-ms="1640" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupAfterTest -->
      </class> <!-- tests.MidtransPaymentFlowTest -->
    </test> <!-- Validating Payment Flow -->
  </suite> <!-- Suite Midtrans -->
</testng-results>
